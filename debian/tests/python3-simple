#!/bin/bash
# Run a simple test from upstream's README for Python 3 against all requested
# Python 3 versions. Assumes $AUTOPKGTEST_TMP is set, see
# /usr/share/doc/autopkgtest/README.package-tests.rst.gz

SOURCE_BASE="$PWD"
for interpreter in `py3versions -r 2>/dev/null`
do
	echo "=== Testing with $interpreter ==="
	mkdir "$AUTOPKGTEST_TMP"/$interpreter
	cp "$SOURCE_BASE"/heart_scale "$AUTOPKGTEST_TMP/$interpreter"
	cd "$AUTOPKGTEST_TMP"/$interpreter

cat > lowlevel-test.py <<EOF
from liblinear import *

prob = problem([1,-1], [{1:1, 3:1}, {1:-1,3:-1}])
param = parameter('-c 4')
m = liblinear.train(prob, param) # m is a ctype pointer to a model
# Convert a Python-format instance to feature_nodearray, a ctypes structure
x0, max_idx = gen_feature_nodearray({1:1, 3:1})
label = liblinear.predict(m, x0)
EOF

cat > util-test.py <<EOF
from liblinearutil import *

# Read data in LIBSVM format
y, x = svm_read_problem('heart_scale')
m = train(y[:200], x[:200], '-c 4')
p_label, p_acc, p_val = predict(y[200:], x[200:], m)

# Construct problem in python format (Sparse data)
y, x = [1,-1], [{1:1, 3:1}, {1:-1,3:-1}]
prob  = problem(y, x)
param = parameter('-s 0 -c 4 -B 1')
m = train(prob, param)
EOF

	echo "--- Testing lowlevel API ---"
	$interpreter lowlevel-test.py
	echo

	echo "--- Testing util API ---"
	$interpreter util-test.py
	echo
done
